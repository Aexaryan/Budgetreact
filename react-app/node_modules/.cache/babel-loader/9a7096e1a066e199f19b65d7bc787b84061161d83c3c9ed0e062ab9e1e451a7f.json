{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const apiService = {\n  // Expense operations\n  async getExpenses() {\n    const response = await api.get('/expenses');\n    return response.data;\n  },\n  async createExpense(expense) {\n    const response = await api.post('/expenses', expense);\n    return response.data;\n  },\n  async updateExpense(id, expense) {\n    const response = await api.put(`/expenses/${id}`, expense);\n    return response.data;\n  },\n  async deleteExpense(id) {\n    await api.delete(`/expenses/${id}`);\n  },\n  // Invoice operations\n  async getInvoices() {\n    const response = await api.get('/invoices');\n    return response.data;\n  },\n  async createInvoice(invoice) {\n    const response = await api.post('/invoices', invoice);\n    return response.data;\n  },\n  async updateInvoice(id, invoice) {\n    const response = await api.put(`/invoices/${id}`, invoice);\n    return response.data;\n  },\n  async deleteInvoice(id) {\n    await api.delete(`/invoices/${id}`);\n  },\n  // Budget operations\n  async getBudgetSummary() {\n    const response = await api.get('/budget-summary');\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","apiService","getExpenses","response","get","data","createExpense","expense","post","updateExpense","id","put","deleteExpense","delete","getInvoices","createInvoice","invoice","updateInvoice","deleteInvoice","getBudgetSummary"],"sources":["/Users/alexanderaryanfar/Budgetreact/Budgetreact/react-app/src/services/apiService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport interface Expense {\n  _id?: string;\n  description: string;\n  amount: number;\n  category: string;\n  subCategory: string;\n  date: string;\n  vendor?: string;\n  receipt?: string;\n  status: 'pending' | 'approved' | 'rejected';\n  notes?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Invoice {\n  _id?: string;\n  invoiceNumber: string;\n  type: 'sponsorship' | 'investment' | 'advertising' | 'other';\n  clientName: string;\n  contactPerson?: string;\n  clientEmail?: string;\n  clientPhone?: string;\n  clientAddress?: string;\n  amount: number;\n  currency: string;\n  paymentTerms?: string;\n  customTerms?: string;\n  description?: string;\n  dueDate?: string;\n  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';\n  notes?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface BudgetSummary {\n  totalSpent: number;\n  categoryBreakdown: Record<string, number>;\n  subCategoryBreakdown: Record<string, number>;\n}\n\nexport const apiService = {\n  // Expense operations\n  async getExpenses(): Promise<Expense[]> {\n    const response = await api.get('/expenses');\n    return response.data;\n  },\n\n  async createExpense(expense: Omit<Expense, '_id'>): Promise<Expense> {\n    const response = await api.post('/expenses', expense);\n    return response.data;\n  },\n\n  async updateExpense(id: string, expense: Partial<Expense>): Promise<Expense> {\n    const response = await api.put(`/expenses/${id}`, expense);\n    return response.data;\n  },\n\n  async deleteExpense(id: string): Promise<void> {\n    await api.delete(`/expenses/${id}`);\n  },\n\n  // Invoice operations\n  async getInvoices(): Promise<Invoice[]> {\n    const response = await api.get('/invoices');\n    return response.data;\n  },\n\n  async createInvoice(invoice: Omit<Invoice, '_id'>): Promise<Invoice> {\n    const response = await api.post('/invoices', invoice);\n    return response.data;\n  },\n\n  async updateInvoice(id: string, invoice: Partial<Invoice>): Promise<Invoice> {\n    const response = await api.put(`/invoices/${id}`, invoice);\n    return response.data;\n  },\n\n  async deleteInvoice(id: string): Promise<void> {\n    await api.delete(`/invoices/${id}`);\n  },\n\n  // Budget operations\n  async getBudgetSummary(): Promise<BudgetSummary> {\n    const response = await api.get('/budget-summary');\n    return response.data;\n  },\n};\n\nexport default apiService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AA4CF,OAAO,MAAMC,UAAU,GAAG;EACxB;EACA,MAAMC,WAAWA,CAAA,EAAuB;IACtC,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMC,aAAaA,CAACC,OAA6B,EAAoB;IACnE,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACW,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;IACrD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMI,aAAaA,CAACC,EAAU,EAAEH,OAAyB,EAAoB;IAC3E,MAAMJ,QAAQ,GAAG,MAAMN,GAAG,CAACc,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEH,OAAO,CAAC;IAC1D,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMO,aAAaA,CAACF,EAAU,EAAiB;IAC7C,MAAMb,GAAG,CAACgB,MAAM,CAAC,aAAaH,EAAE,EAAE,CAAC;EACrC,CAAC;EAED;EACA,MAAMI,WAAWA,CAAA,EAAuB;IACtC,MAAMX,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,WAAW,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMU,aAAaA,CAACC,OAA6B,EAAoB;IACnE,MAAMb,QAAQ,GAAG,MAAMN,GAAG,CAACW,IAAI,CAAC,WAAW,EAAEQ,OAAO,CAAC;IACrD,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMY,aAAaA,CAACP,EAAU,EAAEM,OAAyB,EAAoB;IAC3E,MAAMb,QAAQ,GAAG,MAAMN,GAAG,CAACc,GAAG,CAAC,aAAaD,EAAE,EAAE,EAAEM,OAAO,CAAC;IAC1D,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED,MAAMa,aAAaA,CAACR,EAAU,EAAiB;IAC7C,MAAMb,GAAG,CAACgB,MAAM,CAAC,aAAaH,EAAE,EAAE,CAAC;EACrC,CAAC;EAED;EACA,MAAMS,gBAAgBA,CAAA,EAA2B;IAC/C,MAAMhB,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,iBAAiB,CAAC;IACjD,OAAOD,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}